// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NDC.DataAccess;

#nullable disable

namespace NDC.DataAccess.Migrations
{
    [DbContext(typeof(MeteoritesContext))]
    [Migration("20250613065526_AddIndexes")]
    partial class AddIndexes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NDC.Domain.Entities.Meteorite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ComputedRegionCbhk")
                        .HasColumnType("int");

                    b.Property<int?>("ComputedRegionNnqa")
                        .HasColumnType("int");

                    b.Property<string>("FallType")
                        .IsRequired()
                        .HasColumnType("varchar(32)");

                    b.Property<string>("GeolocationType")
                        .HasColumnType("varchar(32)");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<decimal?>("Mass")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MeteoriteClassId")
                        .HasColumnType("int");

                    b.Property<int>("MeteoriteId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("NameType")
                        .IsRequired()
                        .HasColumnType("varchar(32)");

                    b.Property<DateOnly?>("ObservationYear")
                        .HasColumnType("date");

                    b.Property<decimal?>("Reclat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Reclong")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("MeteoriteClassId");

                    b.HasIndex("MeteoriteId")
                        .IsUnique();

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_Meteorite_Name");

                    b.HasIndex("ObservationYear")
                        .HasDatabaseName("IX_Meteorite_ObservationYear");

                    b.ToTable("Meteorites", (string)null);
                });

            modelBuilder.Entity("NDC.Domain.Entities.MeteoriteClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("MeteoriteClasses", (string)null);
                });

            modelBuilder.Entity("NDC.Domain.Entities.Meteorite", b =>
                {
                    b.HasOne("NDC.Domain.Entities.MeteoriteClass", "MeteoriteClass")
                        .WithMany("Meteorites")
                        .HasForeignKey("MeteoriteClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MeteoriteClass");
                });

            modelBuilder.Entity("NDC.Domain.Entities.MeteoriteClass", b =>
                {
                    b.Navigation("Meteorites");
                });
#pragma warning restore 612, 618
        }
    }
}
